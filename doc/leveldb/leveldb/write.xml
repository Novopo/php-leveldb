<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->

<refentry xml:id="leveldb.write" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>LevelDB::write</refname>
  <refpurpose>
	  Executes all of the operations added in the write batch. 
	  </refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>public</modifier> <type>void</type><methodname>LevelDB::write</methodname>
   <methodparam><type>LevelDBWriteBatch</type><parameter>batch</parameter></methodparam>
   <methodparam choice="opt"><type>string</type><parameter>write_options</parameter></methodparam>
  </methodsynopsis>
  <para>
	  Use the write method can batch execute the operations for the LevelDBWriteBatch object, for example, put, set, or delete, etc. It improves the throughput of the database, and it is atomic. 
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <variablelist>
   <varlistentry>
    <term><parameter>batch</parameter></term>
    <listitem>
     <para>
     A LevelDBWriteBatch object
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><parameter>write_options</parameter></term>
    <listitem>
     <para>
      
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>

  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <example>
   <title><function>LevelDB::write</function> example</title>
   <programlisting role="php">
<![CDATA[
<?php

/* ... */

$db = new LevelDB("/path/to/db", array('comparator' => 'cmp'));
function cmp($a, $b) {
return strcmp($a, $b);
}

$batch = new LevelDBWriteBatch();
$batch->put("key2", "batch value");
$batch->put("key3", "batch value");
$batch->set("key4", "a bounch of values"); // set() is an alias of put()
$batch->delete("key3");

$db->write($batch);
var_dump($db->get("key2"));
var_dump($db->get("key3"));
var_dump($db->get("key4"));

$db->close();

?>
]]>
   </programlisting>
   &example.outputs.similar;
   <screen>
<![CDATA[
string(11) "batch value"
bool(false)
string(18) "a bounch of values"
]]>
   </screen>
  </example>
 </refsect1>


</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
