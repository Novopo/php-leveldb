<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->

<refentry xml:id="leveldb.get" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>LevelDB::get</refname>
  <refpurpose>The get purpose</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>public</modifier> <type>void</type><methodname>LevelDB::get</methodname>
   <methodparam><type>string</type><parameter>key</parameter></methodparam>
   <methodparam choice="opt"><type>string</type><parameter>read_options</parameter></methodparam>
  </methodsynopsis>
  <para>
	  This method is used to return a value. This method accepts a string key.

  </para>

 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <variablelist>
   <varlistentry>
    <term><parameter>key</parameter></term>
    <listitem>
     <para>
		 A string
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><parameter>read_options</parameter></term>
    <listitem>
     <para>
		 A array contains two elements name verify_checksums and fill_cache.
		 read_options['verify_checksums'] may be set to true to force checksum verification of all data that is read from the file system on behalf of a particular read. By default, no such verification is done.
		   When preforming a bulk read, the application mya be set the read_options['fill_cache'] to false to disable the caching so that the data processed by the bulk read does not end up displacing most of the cached contents.

     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
	  Returns a string.
	  If the key is not found, it return false.

  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;

  <example>
   <title><function>LevelDB::get</function> example</title>
   <programlisting role="php">
<![CDATA[
<?php

/* ... */
$db = new LevelDB("/path/to/leveldb-test-db", array('comparator' => 'cmp'));
function cmp($a, $b) {
	return strcmp($a, $b);
}

$db->put("Key", "Value");
$db->set("Key2", "Value2"); // set() is an alias of put()
var_dump($db->get("Key"));
var_dump($db->get("Key2"));


?>
]]>
   </programlisting>
   &example.outputs.similar;
   <screen>
<![CDATA[
string(5) "Value"
string(6) "Value2"
]]>
   </screen>
  </example>
 </refsect1>
 <refsect1 role="seealso">
	 &reftitle.seealso;
	 <para>
		 <simplelist>
			 <member><methodname>LevelDB::set</methodname></member>
		 </simplelist>
	 </para>
 </refsect1>



</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
