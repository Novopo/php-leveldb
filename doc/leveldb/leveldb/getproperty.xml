<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->

<refentry xml:id="leveldb.getproperty" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>LevelDB::getProperty</refname>
  <refpurpose>get the property of db</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>public</modifier> <type>void</type><methodname>LevelDB::getProperty</methodname>
   <methodparam><type>string</type><parameter>name</parameter></methodparam>
  </methodsynopsis>
  <para>

  </para>

 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <variablelist>
   <varlistentry>
    <term><parameter>name</parameter></term>
    <listitem>
     <para>
		 The name parameter specifies the name of database property you require to get.  It must begin to leveldbIt may be any of the following:
		 <table>
			 <title>
				 A list of possible names for <function>getProperty</function>
				 using <parameter>name</parameter>
			 </title>
			 <tgroup cols="2">
				 <thead>
					 <row>
						 <entry><parameter>name</parameter></entry>
						 <entry>Description</entry>
					 </row>
				 </thead>
				 <tbody>
					 <row>
						 <entry><literal>leveldb.stats</literal></entry>
						 <entry>
							 returns the status of the entire db
						 </entry>
					 </row>
					 <row>
						 <entry><literal>leveldb.num-files-at-level</literal></entry>
						 <entry>
							 return the number of files for each level. For example, you can use leveldb.num-files-at-level0 the number of files for zero level. 
						 </entry>
					 </row>
					 <row>
						 <entry><literal>leveldb.sstables</literal></entry>
						 <entry>
							 return current status of sstables 
						 </entry>
					 </row>
				 </tbody>
			 </tgroup>
		 </table>
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>

  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <example>
   <title><function>LevelDB::getProperty</function> example</title>
   <programlisting role="php">
<![CDATA[
<?php
$db = new LevelDB("/path/to/db_test", array('comparator' => 'cmp'));

function cmp($a, $b) {
return strcmp($a, $b);
}

$db->put('key', 'value');
$db->put('key2', 'value2');

var_dump($db->getProperty('leveldb.stats'));
var_dump($db->getProperty('leveldb.num-files-at-level0'));
var_dump($db->getProperty('leveldb.sstables'));

$db->close();

?>
]]>
   </programlisting>
   &example.outputs.similar;
   <screen>
<![CDATA[
string(196) "                               Compactions
Level  Files Size(MB) Time(sec) Read(MB) Write(MB)
--------------------------------------------------
  0        1        0         0        0         0
  "
  string(1) "1"
  string(152) "--- level 0 ---
   5:141['key' @ 1 : 1 .. 'key2' @ 2 : 1]
   --- level 1 ---
   --- level 2 ---
   --- level 3 ---
   --- level 4 ---
   --- level 5 ---
   --- level 6 ---
   "
]]>
   </screen>
  </example>
 </refsect1>


</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
